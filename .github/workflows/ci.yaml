name: default
"on":
  push:
    branches:
      - main
    tags:
      - v*
  pull_request_target:
    types: [labeled]
env:
  CI_ARGS: --cache-from=type=registry,ref=registry.dev.siderolabs.io/${GITHUB_REPOSITORY}:buildcache --cache-to=type=registry,ref=registry.dev.siderolabs.io/${GITHUB_REPOSITORY}:buildcache,mode=max
jobs:
  default:
    permissions:
      contents: write
      packages: write
    runs-on: [self-hosted, X64]
    if: contains(github.event.pull_request.labels.*.name, 'status/ok-to-test')
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [worker.oci]
              gc = true
              gckeepstorage = 100000 # 100 GiB

              [[worker.oci.gcpolicy]]
                keepBytes = 32212254720 # 30 GiB
                keepDuration = 604800
                filters = [ "type==source.local", "type==exec.cachemount", "type==source.git.checkout"]
              [[worker.oci.gcpolicy]]
                all = true
                keepBytes = 107374182400 # 100 GiB
      - name: Slack Notify
        if: always()
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: proj-talos-maintainers
          payload: |
            {
                "attachments": [
                    {
                        "color": "${{ job.status == 'success' && '#2EB886' || job.status == 'failure' && '#A30002' || '#FFCC00' }}",
                        "fallback": "test",
                        "blocks": [
                            {
                                "type": "section",
                                "fields": [
                                    {
                                        "type": "mrkdwn",
                                        "text": "${{ github.event_name == 'pull_request' && format('*Pull Request:* {0} (`{1}`)\n<{2}|{3}>', github.repository, github.base_ref, github.event.pull_request.html_url, github.event.pull_request.title) || format('*Build:* {0}#{1} (`{2}`)', github.repository, github.sha, github.ref_name) }}"
                                    },
                                    {
                                        "type": "mrkdwn",
                                        "text": "*Status:*\n`${{ job.status }}`"
                                    }
                                ]
                            },
                            {
                                "type": "section",
                                "fields": [
                                    {
                                        "type": "mrkdwn",
                                        "text": "*Author:*\n`${{ github.actor }}`"
                                    },
                                    {
                                        "type": "mrkdwn",
                                        "text": "*Event:*\n`${{ github.event_name }}`"
                                    }
                                ]
                            },
                            {
                                "type": "divider"
                            },
                            {
                                "type": "actions",
                                "elements": [
                                    {
                                        "type": "button",
                                        "text": {
                                            "type": "plain_text",
                                            "text": "Logs"
                                        },
                                        "url": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
                                    },
                                    {
                                        "type": "button",
                                        "text": {
                                            "type": "plain_text",
                                            "text": "Commit"
                                        },
                                        "url": "${{ github.event.repository.html_url }}/commit/${{ github.sha }}"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
